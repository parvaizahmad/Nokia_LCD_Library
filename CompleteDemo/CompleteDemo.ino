/*
    Written by      : Parvaiz Ahmad
    Date            : September 19, 2020
    Link of library : https://github.com/parvaizahmad/Nokia_LCD_Library 
    Usage of library: http://www.youtube.com/parvaizahmadofficial
    Change in Update:
                        Originaly library was written for the Arduino/AVR boards, In this update I ported the library for the ESP 8266 as well as for
                        ESP32. Library is tested with esp8266 but not with esp32, so working with esp32 is nor gurenteed.
*/

/* Below is the list of all the methods which you can call on the object.*/
/*
_____________________________________________________________________________________________________________________________________
    STE2007(uint8_t _RES, uint8_t _CS, uint8_t _Data, uint8_t _Clock);                               // Object Creation
    void Initialize();                                                                               //Initialization of the display
    void Clear();                                                                                    //Clear the display
    void Update();                                                             					     //Update the display
    void drawPixel(byte x, byte y, boolean color);                                                   //Draw a pixel
    void fillScreen(boolean color);                                                                  // Fill up the screen
    void drawChar(byte x, byte y, boolean color, unsigned char c);                                   //Draw a character
    void print(byte x, byte y, boolean color, char *str);                                     	     //Print a string
    void print(byte x, byte y, boolean color, long num);											 //Print a number
    void print_1607(byte x, byte y, boolean color, char *str);             						     //Print a string of 1607 size
    void drawLine(byte x0, byte y0, byte x1, byte y1, boolean color);                                //Draw line
    void drawFastVLine(byte x, byte y, byte h, boolean color);                                       //Draw vertical line
    void drawFastHLine(byte x, byte y, byte w, boolean color);                                       //Draw horizantol line
    void drawRect(byte x, byte y, byte w, byte h, boolean color);                                    //Draw Rectangle 
    void drawCircle(byte x0, byte y0, int16_t r, boolean color);                                     //Draw Circle
    void drawRoundRect(byte x, byte y, byte w, byte h, byte r, boolean color);                       //Draw Round Rectangle
    void drawTriangle(byte x0, byte y0, byte x1, byte y1, byte x2, byte y2, boolean color);          //Draw Triangle
    void drawCircleHelper(byte x0, byte y0, byte r, byte cornername, boolean color);                 //Draw arc
    void fillCircle(byte x0, byte y0, byte r, boolean color);                                        //Draw filled circle
    void fillCircleHelper(byte x0, byte y0, byte r, byte cornername, byte delta, boolean color);     //Draw filled arc
    void fillRect(byte x, byte y, byte w, byte h, boolean color);                                    //Draw filled rectangle
    void fillRoundRect(byte x, byte y, byte w, byte h, byte r, boolean color);                       //Draw filled round rectangle
    void fillTriangle(byte x0, byte y0, byte x1, byte y1, byte x2, byte y2, boolean color);          //Draw filled Triangle
    void drawBitmap(byte x, byte y, const char *bitmap, byte w, byte h, boolean color);              //Draw bitmap
    void simb16x32(byte x, byte y, boolean color, byte c);                                           //Draw character of size 16x32
    void simb10x16(byte x, byte y, boolean color, byte c);                                           //Draw character of size 10x16
_______________________________________________________________________________________________________________________________________
*/

#include <ste2007.h>

STE2007 lcd(D1, D2, D3, D4);  // RESET, CS, MOSI, SLK

/*Bitmap Image*/
static const char like_share_sub[864] PROGMEM =
    {
        0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0x3f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x3f, 0x3f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0x60, 0x70, 0x70, 0x78, 0x78, 0x78,
        0x78, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0x78, 0x78, 0x38, 0x38, 0x38, 0x38, 0x38, 0x78, 0x78, 0xf8,
        0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0x78, 0x78, 0x38, 0x38, 0x38, 0x38, 0x78, 0x78, 0xf8, 0xf8, 0xf8,
        0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8,
        0xf8, 0x78, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x78, 0xf8, 0xf8, 0xf8,
        0xf8, 0xf8, 0xf0, 0xf0, 0xe0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0xff, 0xff,
        0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xc7, 0x01, 0x00, 0xf0, 0xf8, 0x00, 0x86, 0x86, 0xce,
        0xee, 0xfe, 0x39, 0xc7, 0x01, 0x00, 0x9e, 0xfe, 0xbf, 0xbb, 0xb3, 0xf7, 0xf6, 0xe0, 0x00, 0xf8,
        0xf8, 0x80, 0x00, 0xf8, 0xf8, 0xf8, 0x00, 0xff, 0xff, 0xff, 0x08, 0xfc, 0xf8, 0xf0, 0x01, 0xb9,
        0xf9, 0x6c, 0x6c, 0xf8, 0xe9, 0x81, 0xf1, 0xf9, 0xf9, 0x0c, 0x98, 0x98, 0x91, 0x01, 0xf9, 0xf8,
        0x18, 0x1c, 0x00, 0xfb, 0xfb, 0xfb, 0x00, 0xff, 0xff, 0xff, 0x08, 0xfc, 0xf8, 0xf8, 0x01, 0xf1,
        0xf9, 0xf9, 0x6c, 0x78, 0xf8, 0xf1, 0x01, 0x03, 0x06, 0x20, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
        0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0f, 0x1f, 0x3e, 0x7c, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb,
        0xfd, 0xfe, 0xff, 0xff, 0xfc, 0xf8, 0xf1, 0xf1, 0xf3, 0xe3, 0xe3, 0xf1, 0xf1, 0xf0, 0xf0, 0xf1,
        0xf3, 0xf3, 0xe1, 0xf3, 0xf3, 0xf1, 0xf0, 0xf3, 0xf1, 0xf1, 0xf3, 0xe3, 0xf1, 0xf0, 0xf0, 0xf1,
        0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xf0, 0xf1, 0xf3, 0xe3, 0xe3, 0xf1, 0xf0, 0xf0, 0xf3, 0xf3,
        0xf0, 0xf0, 0x10, 0x93, 0x93, 0x13, 0x70, 0xf3, 0xf3, 0xf1, 0xf3, 0xe3, 0xe1, 0xf1, 0xf0, 0xf0,
        0xf1, 0xf3, 0xf3, 0xf3, 0x71, 0x31, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
        0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0xec, 0x01, 0xfd,
        0xfd, 0xc1, 0xe1, 0x21, 0xc1, 0xe1, 0xa1, 0xa1, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xd9, 0x79, 0x6d,
        0x99, 0x81, 0x41, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xa1, 0xa1, 0x1d, 0xfd, 0x21, 0x21, 0xe1, 0x01,
        0xe1, 0xe1, 0x21, 0x21, 0xe1, 0x01, 0xe1, 0xe1, 0x21, 0x21, 0xe1, 0xa1, 0xa1, 0xe1, 0xc1, 0x01,
        0x01, 0xf1, 0xe0, 0xff, 0xff, 0xf8, 0xf8, 0xf1, 0xf1, 0xe1, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xf8, 0xf0, 0xe0, 0xc0, 0xc0, 0x80, 0x80, 0x83, 0x83, 0x80, 0x83, 0x80, 0x83,
        0x83, 0x80, 0x83, 0x82, 0x81, 0x83, 0x82, 0x83, 0x81, 0x80, 0x80, 0x80, 0x80, 0x83, 0x83, 0x83,
        0x81, 0x83, 0x82, 0x80, 0x80, 0x80, 0x83, 0x82, 0x83, 0x81, 0x80, 0x83, 0x80, 0x80, 0x83, 0x80,
        0x81, 0x83, 0x82, 0x81, 0x83, 0x80, 0x83, 0x83, 0x80, 0x80, 0x81, 0x83, 0x82, 0x83, 0x80, 0x80,
        0x80, 0x80, 0x87, 0x8f, 0x9f, 0x9f, 0xbf, 0x9f, 0x9f, 0x9f, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x80,
        0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0xc0, 0xe0, 0xf0, 0xfe, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
        0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
        0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
        0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
        0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
        0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f
    };

/*Bitmap Image*/

static const char like_image[864] PROGMEM =
    {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xf0, 0xf8, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc,
        0xfc, 0x7c, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc,
        0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc,
        0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf8, 0xf0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0x7f, 0x3f, 0x0f, 0x07,
        0x01, 0x18, 0x1f, 0x1f, 0x1f, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x03, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0x1b, 0x1b, 0xff, 0xff, 0x03, 0x7f, 0x3f, 0x1f, 0xdf, 0xff, 0xff,
        0x7f, 0x1f, 0xdf, 0xef, 0xcf, 0xdf, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xc0, 0xff, 0xe0, 0xe0, 0xe0, 0xe0,
        0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 0x77,
        0x77, 0x77, 0xf7, 0xf7, 0xff, 0xf0, 0xf0, 0xff, 0xff, 0xf0, 0xfe, 0xfe, 0xfc, 0xf1, 0xf3, 0xff,
        0xfc, 0xf8, 0xf6, 0xf6, 0xf6, 0xf2, 0xfa, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x07, 0x0f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x01, 0x00, 0xfc, 0xfe,
        0xfe, 0xfc, 0x00, 0x01, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
        0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0f, 0x07,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
        0xff, 0xff, 0x00, 0x00, 0xf0, 0xf8, 0xf0, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
        0xff, 0xff, 0xf8, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xff,
        0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x3f, 0xff, 0xff, 0xf8, 0xe0, 0xe0, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f,
        0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

void setup() 
{

lcd.Initialize();   //Initialize the lcd object
lcd.Clear();        //Clear the display

}

void loop() 
{
    lcd.print(1, 1, 1, "Hello all, ");
    lcd.print(1, 10, 1, "This is demo");
    lcd.print(1, 20, 1, "of the STE2007");
    lcd.print(1, 30, 1, "driver library");
    lcd.print(1, 40, 1, "for Nokia 1202");
    lcd.print(1, 50, 1, "LCD. ");
    lcd.print(1, 60, 1, "Parvaiz Ahmad");
    lcd.Update();
    delay(10000);
    lcd.Clear();

    //******************************************************************************************************************************************
    //************************** We display the text in the given lines according to the given familiarity, as in 1602 *************************

    lcd.print_1607(0, 0, 1, "Checking!"); //We print the line "Check!" starting from zero, in the zero line
    lcd.print_1607(1, 6, 1, "Done!!!"); //We print the line "Done !!!" starting from the first character, in the sixth, last line
    delay(10000);

    //******************************************************************************************************************************************
    //************************************************************ Draw pixel by pixel *********************************************************

    for (int i = 0; i <= 4; i++)                //Blinking a pixel at coordinates in a loop
    {
        lcd.drawPixel(10, 10, 1);               //Turn on the pixel at x and y coordinates
        lcd.Update();                           //Update the display (output from the buffer)
        delay(100);                             //break
        lcd.drawPixel(10, 10, 0);               //Turn on the pixel at x and y coordinates
        lcd.Update();                           //Refreshing the display (outputting from the buffer)
        delay(100);                             //Break
    }
    lcd.Clear();                                //Cleaning up the display
    for (int i = 0; i <= 50; i++)               //Let's draw a line by coordinates in a loop
    {   
        lcd.drawPixel(i, i, 1);                 //Turn on the pixel at x and y coordinates
        lcd.Update();                           //Refreshing the display (outputting from the buffer)
    }
    delay(500);                                 //Break
    lcd.Clear();                                //Clear display
    //******************************************************************************************************************************************
    //************************************************************ Fill the entire display *****************************************************

    for (int i = 0; i <= 2; i++) //Loop for display filling
    {
        lcd.fillScreen(1);                      //Turn screen into black/turn on all the pixels of the the screen
        lcd.Update();                           //Refreshing the display (outputting from the buffer)
        delay(500);                             //Delay some time 
        lcd.fillScreen(0);                      //Выключаем все пиксели
        lcd.Update();                           //Refreshing the display (outputting from the buffer)
        delay(500);                             //Delay some time 
    }
    lcd.Clear();                                    //Clear the display
    //******************************************************************************************************************************************
    //************************************************************ We display the character in coordinates *************************************

    lcd.drawChar(30, 10, 1, 'Ж');                   //Draw a character 
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //******************************************************************************************************************************************
    //********************************************************** We display the line by coordinates ********************************************

    lcd.print(9, 36, 1, "Hello WORLD!" );           //Print 
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //******************************************************************************************************************************************
    //********************************************************** Displaying a numerical value by coordinates ***********************************
    float t= 1.25;
    long p= -345;
    byte k= 255;

    lcd.print(3, 5, 1, "Numbers: ");                //We display in coordinates x, y, in black, the line "Numbers:"
    lcd.print(9, 15, 1, t);                         //Displaying a numeric value of type integer
    lcd.print(9, 25, 1, p);                         //Displaying a numeric value of type long
    lcd.print(9, 35, 1, k);                         //Displaying a numeric value of type byte
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //******************************************************************************************************************************************

    //********************************************************** Draw a line by coordinates ****************************************************

    lcd.drawLine(10, 10, 45, 45, 1);                //Draw a line in black at coordinates x, y, x1, y1
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //********************************************* Draw a vertical line by coordinates *********************************************************

    lcd.drawFastVLine(20, 20, 30, 1);               //We display by coordinates x, y, a vertical line, 30 pixels high, in black
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //********************************************* Draw a horizontal line by coordinates *******************************************************

    lcd.drawFastHLine(20, 20, 30, 1);               //We display by coordinates x, y, a horizontal line, 30 pixels long, in black
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //******************************************************* Draw a rectangle along the coordinates ********************************************

    lcd.drawRect(10, 10, 40, 30, 1);                //Draw a rectangle at coordinates x, y, height, width, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //***************************************************** Draw a circle by coordinates ********************************************************

    lcd.drawCircle(30, 30, 20, 1);                  //Draw a circle centered on coordinates x, y, radius, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //***************************************** Draw a rounded rectangle along the coordinates **************************************************

    lcd.drawRoundRect(10, 10, 40, 30, 10, 1);       //Draw a rounded rectangle by coordinates x, y, height, width, rounding radius, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //***************************************************** Draw a triangle along the coordinates ***********************************************

    lcd.drawTriangle(10, 55, 35, 5, 60, 55, 1);     //Draw a triangle at the coordinates of the vertices x, y, x1, y1, x2, y2, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //*************************************************************** Draw an arc ***************************************************************

    lcd.drawCircleHelper(30, 30, 20, 180, 1);       //Draw an arc with coordinates x, y, radius, rotation angle, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //*************************************************************** Draw a circle *************************************************************

    lcd.fillCircle(30, 30, 20, 1);                  //Draw a filled circle centered on coordinates x, y, radius, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //***************************************************** Draw a filled arc, a semicircle *****************************************************

    lcd.fillCircleHelper(30, 30, 20, 10, 1, 1);     //Draw a filled arc with coordinates x, y, radius, rotation angle, arc length, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //******************************************************* Draw a filled rectangle ***********************************************************

    lcd.fillRect(10, 10, 40, 30, 1);                //Draw a filled rectangle at coordinates x, y, height, width, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //******************************************* Draw a filled, rounded rectangle **************************************************************

    lcd.fillRoundRect(10, 10, 40, 30, 10, 1);       //Draw a filled, rounded rectangle along the x, y coordinates, height, width, radius, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //***************************************************** Draw a filled triangle **************************************************************

    lcd.fillTriangle(10, 55, 35, 5, 60, 55, 1);     //Draw a filled triangle at the coordinates of the vertices x, y, x1, y1, x2, y2, color
    lcd.Update();                                   //Refreshing the display (outputting from the buffer)
    delay(1000);                                    //Delay some time 
    lcd.Clear();                                    //Clear the display

    //*******************************************************************************************************************************************
    //********************************************** Displaying an image from the image array ***************************************************

    lcd.drawBitmap(0, 0, like_image, 96, 64, 1);    //We display the image in coordinates x, y, with a size of 96 by 64 pixels, with color 1 (1 - pixel is on, dark)
    lcd.Update();                                   //Update the display from buffer
    delay(10000);                                    //Delay some time
    lcd.Clear();                                    //Clear the display

    lcd.drawBitmap(0, 0, like_share_sub, 96, 64, 1); //We display the image in coordinates x, y, with a size of 96 by 64 pixels, with color 1 (1 - pixel is on, dark)
    lcd.Update();                                   //Update the display from buffer
    delay(10000);                                    //Delay some time
    lcd.Clear();                                    //Clear the display

    //*********************************************************************************************************************************************
    //********************************************** Printing a character with a size of 16x32 pixels *********************************************

    lcd.simb16x32(1, 25, 1, 8);                     //We output to coordinates x, y, color 1, number 8, size 16x32 pixels
    lcd.simb16x32(27, 25, 1, 8);                    //We output to coordinates x, y, color 1, number 8, size 16x32 pixels
    lcd.simb16x32(53, 25, 1, 8);                    //We output to coordinates x, y, color 1, number 8, size 16x32 pixels
    lcd.simb16x32(79, 25, 1, 8);                    //We output to coordinates x, y, color 1, number 8, size 16x32 pixels
    lcd.Update();                                   //Update the display from buffer
    delay(3000);                                    //Delay some time
    lcd.Clear();                                    //Clear the display

    //**********************************************************************************************************************************************
    //********************************************** Printing a character with a size of 10x16 pixels **********************************************
    for (int i=1; i<=85; )
    {
        lcd.simb10x16(i, 30, 1, 8);                 //We output in coordinates x, y, color 1, number 8, size 10x16 pixels
        i = i + 12;
    }
    lcd.Update();                                   //Update the display from buffer
    delay(3000);                                    //Delay some time
    lcd.Clear();                                    //Clear the display

}

